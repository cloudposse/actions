# MEGA-LINTER FLAVOR [ci_light]: Optimized for CI items (Dockerfile, Jenkinsfile, JSON/YAML schemas,XML
###########################################
###########################################
## Dockerfile to run Mega-Linter ##
###########################################
###########################################

#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#FROM__START
FROM hadolint/hadolint:latest-alpine as hadolint
#FROM__END

##################
# Get base image #
##################
FROM python:3.8-alpine

#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#ARG__START

#ARG__END

####################
# Run APK installs #
####################

# APK Packages used by mega-linter core architecture
RUN apk add --update --no-cache \
    bash \
    coreutils \
    curl \
    file \
    gcc \
    git git-lfs\
    go \
    gnupg \
    icu-libs \
    jq \
    krb5-libs \
    libcurl libintl libssl1.1 libstdc++ \
    libffi-dev \
    linux-headers \
    make \
    musl-dev \
    openjdk8 \
    npm \
    nodejs-current \
    py3-setuptools \
    readline-dev \
    ruby-bundler \
    ruby-dev

#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#APK__START
RUN apk add --update --no-cache \
                libc-dev \
                libxml2-dev \
                libxml2-utils \
                libgcc
#APK__END

# PATH for golang
ENV GOROOT=/usr/lib/go \
    GOPATH=/go
ENV PATH="$PATH":"$GOROOT"/bin:"$GOPATH"/bin
RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin

#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#PIP__START
RUN pip3 install --no-cache-dir \
          yamllint
#PIP__END

############################
# Install NPM dependencies #
#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#NPM__START
RUN npm install --no-cache --ignore-scripts \
                dockerfilelint \
                npm-groovy-lint \
                jsonlint \
                eslint eslint-plugin-jsonc \
                v8r
#NPM__END

# Add node packages to path #
ENV PATH="/node_modules/.bin:${PATH}"

##############################
# Installs ruby dependencies #
#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################

#GEM__START

#GEM__END

#############################################################################################
## Generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#OTHER__START
# GIT installation
RUN git config --global core.autocrlf true

# hadolint installation
COPY --from=hadolint /bin/hadolint /usr/bin/hadolint

# dotenv-linter installation
RUN wget -q -O - https://raw.githubusercontent.com/dotenv-linter/dotenv-linter/master/install.sh | sh -s

#OTHER__END

######################
# Set the entrypoint #
######################
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x entrypoint.sh
ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]

################################
# Installs python dependencies #
################################
COPY megalinter /megalinter
RUN python /megalinter/setup.py install

#######################################
# Copy scripts and rules to container #
#######################################
COPY megalinter/descriptors /megalinter-descriptors
COPY TEMPLATES /action/lib/.automation

###########################
# Get the build arguments #
###########################
ARG BUILD_DATE
ARG BUILD_REVISION
ARG BUILD_VERSION

#################################################
# Set ENV values used for debugging the version #
#################################################
ENV BUILD_DATE=$BUILD_DATE \
    BUILD_REVISION=$BUILD_REVISION \
    BUILD_VERSION=$BUILD_VERSION

#FLAVOR__START
ENV MEGALINTER_FLAVOR=ci_light
#FLAVOR__END

#########################################
# Label the instance and set maintainer #
#########################################
LABEL com.github.actions.name="Mega-Linter" \
      com.github.actions.description="The ultimate linters aggregator to make sure your projects are clean" \
      com.github.actions.icon="code" \
      com.github.actions.color="red" \
      maintainer="Nicolas Vuillamy <nicolas.vuillamy@gmail.com>" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.revision=$BUILD_REVISION \
      org.opencontainers.image.version=$BUILD_VERSION \
      org.opencontainers.image.authors="Nicolas Vuillamy <nicolas.vuillamy@gmail.com>" \
      org.opencontainers.image.url="https://nvuillam.github.io/mega-linter" \
      org.opencontainers.image.source="https://github.com/nvuillam/mega-linter" \
      org.opencontainers.image.documentation="https://nvuillam.github.io/mega-linter" \
      org.opencontainers.image.vendor="Nicolas Vuillamy" \
      org.opencontainers.image.description="Lint your code base with GitHub Actions"